openapi: 3.0.3
info:
  title: Hahabit API
  description: API for the Hahabit Habit Tracker
  version: 0.1.0
servers:
  - url: 'https://hahabit.skagedal.tech/api'
    description: Production
  - url: 'http://localhost:8080/api'
    description: Local
paths:
  /habits:
    get:
      tags:
        - Habit
      summary: Get all habits
      description: Get all habits
      operationId: getHabits
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  habits:
                    type: array
                    items:
                      $ref: '#/components/schemas/Habit'
        '401':
          description: Unauthorized
    post:
      tags:
        - Habit
      summary: Create a new habit
      description: Create a new habit
      operationId: createHabit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HabitCreateRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                properties: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /habits/{date}:
    get:
      tags:
        - Habit
      summary: Get all habits for a specific date
      description: Get all habits for a specific date
      operationId: getHabitsForDate
      parameters:
        - name: date
          in: path
          description: The date to get habits for
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [habits]
                properties:
                  habits:
                    type: array
                    items:
                      $ref: '#/components/schemas/HabitForDate'
        '401':
          description: Unauthorized
  /habits/{date}/{habitId}/track:
    post:
      tags:
        - Habit
      summary: Track a habit for a specific date
      description: Track a habit for a specific date
      operationId: trackHabit
      parameters:
        - name: date
          in: path
          description: The date to track the habit for
          required: true
          schema:
            type: string
            format: date
        - name: habitId
          in: path
          description: The habit to track
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Tracked
          content:
            application/json:
              schema:
                properties: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /users:
    get:
      tags:
        - User
      summary: Get all users
      description: Get all users. Only available to admins. Not implemented.
      operationId: getUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        username:
                          type: string
                          example: simon
        '401':
          description: Unauthorized
components:
  schemas:
    Habit:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 53
        ownedBy:
          type: string
          example: simon
        description:
          type: string
          example: Do the dishes
        createdAt:
          type: string
          format: date-time
    HabitCreateRequest:
      type: object
      required: [description]
      properties:
        description:
          type: string
          example: Brush my teeth
    HabitForDate:
      type: object
      required: [habitId, description, date, trackingId]
      properties:
        habitId:
          type: integer
          format: int64
          example: 124
        description:
          type: string
          example: Do the dishes
        date:
          type: string
          format: date
        trackingId:
          type: integer
          format: int64
          nullable: true
          example: 123
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
security:
  - basicAuth: []
